from rest_framework import serializers
from .models import Chat, Message
from account.models import CustomUser


class CustomUserSerializer(serializers.ModelSerializer):
    class Meta:
        model = CustomUser
        fields = ['id', 'nickname']


class ChatSerializer(serializers.ModelSerializer):
    participants = serializers.PrimaryKeyRelatedField(
        many=True, queryset=CustomUser.objects.all(), required=False
    )
    image = serializers.SerializerMethodField()
    name = serializers.SerializerMethodField()  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –∏–º–µ–Ω–∏

    class Meta:
        model = Chat
        fields = ['id', 'name', 'is_group', 'participants', 'image', 'created_at']

    def get_image(self, obj):
        """–ï—Å–ª–∏ —á–∞—Ç –≥—Ä—É–ø–ø–æ–≤–æ–π ‚Äî –±–µ—Ä–µ–º –µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –µ—Å–ª–∏ –ª–∏—á–Ω—ã–π ‚Äî –∞–≤–∞—Ç–∞—Ä —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞"""
        request = self.context.get("request")
        if not request or not hasattr(request, "user"):
            print("‚ö†Ô∏è –û—à–∏–±–∫–∞: request –∏–ª–∏ request.user –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return None

        user = request.user

        if obj.is_group:
            return obj.image.url if obj.image else "/media/default_chat.png"

        # –ü–æ–ª—É—á–∞–µ–º —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞
        participants = obj.participants.exclude(id=user.id)
        if participants.exists():
            sobesednik = participants.first()
            print(f"üîπ –°–æ–±–µ—Å–µ–¥–Ω–∏–∫: {sobesednik.nickname or sobesednik.username}, —Ñ–æ—Ç–æ: {sobesednik.image}")

            return sobesednik.image.url if sobesednik.image else "/media/default_avatar.png"

        print("‚ö†Ô∏è –û—à–∏–±–∫–∞: –õ–∏—á–Ω—ã–π —á–∞—Ç, –Ω–æ –Ω–µ—Ç —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞!")
        return "/media/default_avatar.png"

    def get_name(self, obj):
        """–§–æ—Ä–º–∏—Ä—É–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∏–º—è –ª–∏—á–Ω–æ–≥–æ —á–∞—Ç–∞ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        if obj.is_group:
            return obj.name  # –î–ª—è –≥—Ä—É–ø–ø–æ–≤–æ–≥–æ —á–∞—Ç–∞ –æ—Å—Ç–∞–≤–ª—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –∏–º—è

        request = self.context.get("request")
        if not request or not hasattr(request, "user"):
            print("‚ö†Ô∏è –û—à–∏–±–∫–∞: request –∏–ª–∏ request.user –Ω–µ –Ω–∞–π–¥–µ–Ω!")  # –õ–æ–≥–∏—Ä—É–µ–º –ø—Ä–æ–±–ª–µ–º—É
            return None

        user = request.user
        participants = obj.participants.exclude(id=user.id)  # –ü–æ–ª—É—á–∞–µ–º —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞

        if participants.exists():
            sobesednik = participants.first()
            print(f"üîπ –°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –Ω–∞–π–¥–µ–Ω: {sobesednik.nickname or sobesednik.username}")
            return sobesednik.nickname or sobesednik.username  # –ë–µ—Ä–µ–º –Ω–∏–∫–Ω–µ–π–º –∏–ª–∏ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

        print("‚ö†Ô∏è –û—à–∏–±–∫–∞: –õ–∏—á–Ω—ã–π —á–∞—Ç, –Ω–æ –Ω–µ—Ç —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞!")
        return "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫"



class MessageSerializer(serializers.ModelSerializer):
    # sender = serializers.HiddenField(default=serializers.CurrentUserDefault())
    chat = serializers.PrimaryKeyRelatedField(queryset=Chat.objects.all())
    sender = CustomUserSerializer(read_only=True)
    file_url = serializers.SerializerMethodField()

    class Meta:
        model = Message
        fields = ['id', 'chat', 'sender', 'text', 'file', 'file_url', 'created_at']

    def get_file_url(self, obj):
        if obj.file:
            return obj.file.url
        return None

